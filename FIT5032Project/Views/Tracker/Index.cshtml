@model FIT5032Project.Models.TrackerViewModel

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Tracker</h2>

@using (Html.BeginForm("Create", "Tracker", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="container border p-1">
        <div class="row my-auto">
            <div class="col-md-3">
                @Html.EditorFor(model => model.NewItem.Name, new { htmlAttributes = new { placeholder = "What did you work on?", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NewItem.Name, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-1 my-auto">
                @Html.DropDownListFor(model => model.NewItem.Priority, new SelectList(Enumerable.Range(1, 5)), "Priority")
                @Html.ValidationMessageFor(model => model.NewItem.Priority, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2 my-auto">
                @Html.EditorFor(model => model.NewItem.StartTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NewItem.StartTime, "", new { @class = "text-danger" })
            </div>


            <div class="col-md-2 my-auto">
                @Html.EditorFor(model => model.NewItem.EndTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NewItem.EndTime, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-2 my-auto">
                @Html.EditorFor(model => model.NewItem.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NewItem.Date, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-1 my-auto">
                <button id="mapBtn" type="button" class="btn" onclick="showMap()"><img src="~/Images/8262-200.png" style="width: 30px; height: 30px;" /></button>
            </div>

            <div class="col-sm my-auto mx-1">
                <input class="btn btn-primary float-right" type="submit" value="Add">
            </div>
        </div>
        <!-- The Modal -->
        <div id="myModal" class="modal">
            <!-- Modal content -->
            <div class="modal-content">
                <span class="close" onclick="closeMap()">&times;</span>
                <div style="display: none;">
                    @Html.EditorFor(model => model.NewItem.Location.Latitude, new { htmlAttributes = new { @class = "form-control", @Value = -1000 } })
                    @Html.EditorFor(model => model.NewItem.Location.Longitude, new { htmlAttributes = new { @class = "form-control", @Value = -1000 } })
                </div>
                <section class="map_box_container">
                    <div id='map' style="width:100%; height:100%;"></div>
                </section>

            </div>

        </div>
    </div>
}
<div class="m-3">
    <table id="task_list" class="display">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Items.GetEnumerator().Current.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Items.GetEnumerator().Current.Priority)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Items.GetEnumerator().Current.StartTime)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Items.GetEnumerator().Current.EndTime)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Items.GetEnumerator().Current.Date)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Items.GetEnumerator().Current.Location)
                </th>
                <th>
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Items)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Priority)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.StartTime)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EndTime)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Date)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Location)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                        @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                    </td>
                </tr>
            }
        </tbody>

    </table>
</div>


@section Styles{
    <style>
        /* The Modal (background) */
        .modal {
            display: none; /* Hidden by default */
            position: fixed; /* Stay in place */
            z-index: 1; /* Sit on top */
            left: 0;
            top: 0;
            width: 100%; /* Full width */
            height: 100%; /* Full height */
            overflow: auto; /* Enable scroll if needed */
            background-color: rgb(0,0,0); /* Fallback color */
            background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
        }

        /* Modal Content/Box */
        .modal-content {
            background-color: #fefefe;
            margin: 10% auto; /* 15% from the top and centered */
            padding: 20px;
            border: 1px solid #888;
            width: 80%; /* Could be more or less, depending on screen size */
            height:80%;
        }

        @*#map {
            height: 100%;
            width: 100%;
        }*@

        .map_box_container {
            position: relative;
            height: 100% !important;
            width: 100% !important;
        }

        #map {
            position: absolute;
            top: 0;
            bottom: 0;
            width: 100%;
        }

        /* The Close Button */
        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

            .close:hover,
            .close:focus {
                color: black;
                text-decoration: none;
                cursor: pointer;
            }
    </style>
    <link rel="stylesheet" href="https://cdn.datatables.net/1.10.22/css/jquery.dataTables.min.css">
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="https://cdn.datatables.net/1.10.22/css/jquery.dataTables.min.css"></script>
    <script src='https://api.mapbox.com/mapbox-gl-js/v1.12.0/mapbox-gl.js'></script>
    <link href='https://api.mapbox.com/mapbox-gl-js/v1.12.0/mapbox-gl.css' rel='stylesheet' />
    <script src="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v4.5.1/mapbox-gl-geocoder.min.js"></script>
    <link rel="stylesheet" href="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v4.5.1/mapbox-gl-geocoder.css" type="text/css" />
    <script src="https://cdn.datatables.net/1.10.22/js/jquery.dataTables.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js" integrity="sha512-qTXRIMyZIFb8iQcfjXWCO8+M5Tbc38Qi5WzdPOYZHIlZpzBHG3L3by84BBBOiRGiEb7KKtAOAs5qYdUiZiQNNQ==" crossorigin="anonymous"></script>
    <script src="https://cdn.datatables.net/plug-ins/1.10.21/sorting/datetime-moment.js"></script>
    <script>
        $(document).ready(function () {
            $.fn.dataTable.moment('HH:mm L');
            $.fn.dataTable.moment('HH:mm L');
            $.fn.dataTable.moment('DD/MM/YYYY');
            $('#task_list').DataTable({
                "columnDefs": [
                    { "searchable": false, "targets": [6] },
                    { "orderable": false, "targets": [6] }
                ],
                "order": [[4, 'desc'], [2, 'desc']]
            })
        });

        mapboxgl.accessToken = 'pk.eyJ1Ijoic2FyYXRyYW4iLCJhIjoiY2tncWxlaTEwMGhvNTJycjNucHpyMzd5YSJ9.UIm1eziEsGQj5mv9-uLNMQ';
        var map = new mapboxgl.Map({
            container: 'map',
            style: 'mapbox://styles/mapbox/streets-v11', // stylesheet location
            center: [-74.5, 40], // starting position [lng, lat]
            zoom: 9 // starting zoom
        });

        map.on('load', function () {
            map.resize();
        });

        var geocoder = new MapboxGeocoder({
            accessToken: mapboxgl.accessToken,
            mapboxgl: mapboxgl,
            marker: false
        })
        map.addControl(geocoder);

        let marker = new mapboxgl.Marker();

        geocoder.on('result', function (e) {
            console.log(e.result.center)
            marker.setLngLat(e.result.center);
            marker.addTo(map);
            $("#NewItem_Location_Latitude").val(e.result.center[1]);
            $("#NewItem_Location_Longitude").val(e.result.center[0]);
        })

        map.on('click', function (e) {
            console.log(e.lngLat);
            marker.setLngLat(e.lngLat);
            marker.addTo(map);
            $("#NewItem_Location_Latitude").val(e.lngLat.lat);
            $("#NewItem_Location_Longitude").val(e.lngLat.lng);
        })

        var modal = document.getElementById("myModal");

        function showMap() {
            modal.style.display = "block";
            map.resize();
        }

        function closeMap() {
            modal.style.display = "none";
        }

        // When the user clicks anywhere outside of the modal, close it
        window.onclick = function (event) {
            if (event.target == modal) {
                modal.style.display = "none";
            }
        }


    </script>
}

